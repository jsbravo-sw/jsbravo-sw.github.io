swagger: '2.0'
info:
  description: >-
    API to manage CNK cryptocurrency.
  version: 2.0.0
  title: CNK Cryptocurrency
  contact:
    email: jsbravoc@gmail.com
host: 'localhost:9001'
basePath: /
tags:
  - name: users
    description: User creation and retrieval
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: cryptocurrency
    description: Transaction creation and management
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
schemes:
  - https
  - http
paths:
  /user:
    get:
      tags:
        - users
      summary: Retrieves all users
      description: ''
      operationId: retrieveUsers
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Retrieves all users
          schema:
            $ref: '#/definitions/ArrayOfExtendedUsers'
        '403':
          description: Unauthorized
        '405':
          description: Invalid input
        '500':
          description: Internal server error
        '503':
          description: Sawtooth service unavailable
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    post:
      tags:
        - users
      summary: Creates a new user
      description: ''
      operationId: addUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: New user to add to the cryptocurrency
          required: true
          schema:
            $ref: '#/definitions/ExtendedUser'
      responses:
        '201':
          description: Created user.
          schema:
            $ref: '#/definitions/ExtendedUser'
        '403':
          description: Unauthorized
        '405':
          description: Invalid input
        '500':
          description: Internal server error
        '503':
          description: Sawtooth service unavailable
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  '/user/{address}':
    get:
      tags:
        - users
      summary: Retrieves one specific user
      description: ''
      operationId: retrieveUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: The address of the user to retrieve
          required: true
          type: string
      responses:
        '200':
          description: Retrieves the user and his/her public key.
          schema:
            $ref: '#/definitions/ExtendedUserWithTransactions'
        '403':
          description: Unauthorized
        '405':
          description: Invalid input
        '500':        
          description: Internal server error
        '503':
          description: Sawtooth service unavailable
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    put:
      tags:
        - users
      summary: Updates one specific user
      description: ''
      operationId: updateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: The address of the user to retrieve
          required: true
          type: string
        - in: query
          name: action
          description: The action to execute to the user
          required: true
          type: string
          enum:
            - activate
            - disactive
      responses:
        '200':
          description: Updates user information.
          schema:
            $ref: '#/definitions/ExtendedUser'
        '403':
          description: Unauthorized
        '405':
          description: Invalid input
        '500':
          description: Internal server error
        '503':
          description: Sawtooth service unavailable
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    delete:
      tags:
        - users
      summary: Deletes one specific user and transfers CNKs to another user 
      description: ''
      operationId: DeleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: The address of the user to retrieve
          required: true
          type: string
        - in: body
          name: body
          description: Who will receive all the CNKs from the deleted user. If it is not specified, CNKs will return to return_to address.
          required: false
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: The users CNKs were transferred successfully. 
        '403':
          description: Unauthorized
        '405':
          description: Invalid input
        '500':
          description: Internal server error
        '503':
          description: Sawtooth service unavailable
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /cryptocurrency:
    get:
      tags:
        - cryptocurrency
      summary: Retrieves all users, lastest transactions and balance
      description: ''
      operationId: getCryptocurrency
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Information about the cryptocurrency flow.
          schema:
            $ref: '#/definitions/ArrayOfExtendedUserWithTransactions'
        '403':
          description: Unauthorized
        '405':
          description: Invalid input
        '500':
          description: Internal server error
        '503':
          description: Sawtooth service unavailable
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    post:
      tags:
        - cryptocurrency
      summary: Creates a new transaction
      description: ''
      operationId: addTransaction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: New transaction to add to the blockchain
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '200':
          description: Created with supporting transactions
          schema:
            $ref: '#/definitions/ExtendedTransaction'
        '201':
          description: Created as a coinbase transaction
          schema:
            $ref: '#/definitions/ExtendedCoinbaseTransaction'
        '403':
          description: Unauthorized
        '405':
          description: Invalid input
        '500':
          description: Internal server error
        '503':
          description: Sawtooth service unavailable
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  '/cryptocurrency/{id}':
    get:
      tags:
        - cryptocurrency
      summary: Retrieves one specific transaction
      description: ''
      operationId: retrieveTransaction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: The ID of the transaction to retrieve
          required: true
          type: string
      responses:
        '200':
          description: Retrieves the transaction
          schema:
            $ref: '#/definitions/ExtendedTransaction'
        '403':
          description: Unauthorized
        '405':
          description: Invalid input
        '500':
          description: Internal server error
        '503':
          description: Sawtooth service unavailable
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    put:
      tags:
        - cryptocurrency
      summary: Approve or reject a transaction
      description: ''
      operationId: approveTransaction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: The ID of the transaction to execute an action
          required: true
          type: string
        - in: query
          name: action
          description: The action to execute to the transaction
          required: true
          type: string
          enum:
            - approve
            - reject
      responses:
        '200':
          description: Updated transaction
          schema:
            $ref: '#/definitions/ExtendedTransaction'
        '403':
          description: Unauthorized
        '405':
          description: Invalid input
        '500':
          description: Internal server error
        '503':
          description: Sawtooth service unavailable
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Transaction:
    type: object
    required:
      - sender
      - amount
      - receiver
    properties:
      sender:
        type: string
        format: string
        example: juan.bravo
      amount:
        type: number
        format: double
        example: '2.8'
        minimum: 0
      receiver:
        type: string
        format: string
        example: jsbravoc
      valid_thru:
        type: string
        format: date-time
      approver:
        type: string
        format: string
        example: my.approver
      signature:
        type: string
        format: string
        example: b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79
    xml:
      name: Transaction
  CoinbaseTransaction:
    type: object
    required:
      - amount
      - receiver
    properties:
      amount:
        type: number
        format: double
        example: '2.8'
      receiver:
        type: string
        format: string
        example: jsbravoc
      valid_thru:
        type: string
        format: date-time
    xml:
      name: Transaction
  TransactionWithId:
    type: object
    required:
      - sender
      - amount
      - receiver
    properties:
      id:
        type: string
        format: string
        example: 7bb348fa-e8ca-4cbb-9867-c027cc387b55
      sender:
        type: string
        format: string
        example: juan.bravo
      amount:
        type: number
        format: double
        example: '2.8'
      receiver:
        type: string
        format: string
        example: jsbravoc
      valid:
        type: boolean
        format: string
        example: 'true'
      valid_thru:
        type: string
        format: date-time
      approver:
        type: string
        format: string
        example: my.approver
      signature:
        type: string
        format: string
        example: b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79
    xml:
      name: Transaction
  ExtendedTransaction:
    type: object
    required:
      - id
      - sender
      - amount
      - receiver
      - valid
      - supporting_transactions
    properties:
      id:
        type: string
        format: string
        example: bf000a52-6e7b-4d69-95c4-6f9e8318996b
      sender:
        type: string
        format: string
        example: jsbravoc
      amount:
        type: number
        format: double
        example: '2.8'
      receiver:
        type: string
        format: string
        example: juan.bravo
      valid:
        type: boolean
        format: string
        example: 'false'
      supporting_transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionWithId'
      valid_thru:
        type: string
        format: date-time
      approver:
        type: string
        format: string
        example: my.approver
      signature:
        type: string
        format: string
        example: b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79
    xml:
      name: Transaction
  ArrayOfExtendedTransactions:
    type: array
    items: 
      $ref: "#/definitions/ExtendedTransaction"
    xml:
      name: Transaction
  ExtendedCoinbaseTransaction:
    type: object
    required:
      - id
      - amount
      - receiver
      - valid
      - signature
    properties:
      id:
        type: string
        format: string
        example: bf000a52-6e7b-4d69-95c4-6f9e8318996b
      amount:
        type: number
        format: double
        example: '2.8'
      receiver:
        type: string
        format: string
        example: juan.bravo
      valid:
        type: boolean
        format: string
        example: 'true'
      valid_thru:
        type: string
        format: date-time
      signature:
        type: string
        format: string
        example: b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79
    xml:
      name: Transaction
  User:
    type: object
    properties:
      address:
        type: string
        format: string
        example: js.bravo
      return_to:
        type: string
        format: string
        example: depto_sistemas
    xml:
      name: User
  ExtendedUser:
    type: object
    properties:
      active:
        type: boolean
        format: boolean
      return_to:
        type: string
        format: string
        example: depto_sistemas
      balance: 
        type: number
        format: double
        example: 2.9
      address:
        type: string
        format: string
        example: js.bravo
      public_key:
        type: string
        format: string
        example: 0x06A85356DCb5b307096726FB86A78c59D38e08ee
  ArrayOfExtendedUsers:
    type: array
    items:
      $ref: "#/definitions/ExtendedUser"
    xml:
      name: User
  ExtendedUserWithPrivateKey:
    type: object
    required: ["address"]
    properties:
      address:
        type: string
        format: string
        example: js.bravo
      public_key:
        type: string
        format: string
        example: 06A85356DCb5b307096726FB86A78c59D38e08ee
      private_key:
        type: string
        format: string
        example: 0x06A85356DCb5b307096726FB86A78c59D38e08ee
    xml:
      name: User
  ExtendedUserWithTransactions:
    type: object
    properties:
      active:
        type: boolean
        format: boolean
      return_to:
        type: string
        format: string
        example: depto_sistemas
      balance: 
        type: number
        format: double
        example: 0
      address:
        type: string
        format: string
        example: js.bravo
      public_key:
        type: string
        format: string
        example: 0x06A85356DCb5b307096726FB86A78c59D38e08ee
      lastest_transactions:
        $ref: "#/definitions/ArrayOfExtendedTransactions"
    xml:
      name: User
  ArrayOfExtendedUserWithTransactions:
    type: array
    items:
      $ref: "#/definitions/ExtendedUserWithTransactions"
    xml:
      name: User
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
